/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase() :
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_TEST_ID));
    add(image1);

    Front_Button.setXY(414, 60);
    Front_Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
    Front_Button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_MNBU));
    Front_Button.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Front_Button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Front_Button.setAction(buttonCallback);
    add(Front_Button);

    Open_Button.setXY(178, 90);
    Open_Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
    Open_Button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_7233));
    Open_Button.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Open_Button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Open_Button.setAction(buttonCallback);
    add(Open_Button);

    Close_Button.setXY(178, 375);
    Close_Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
    Close_Button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_YU4O));
    Close_Button.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Close_Button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Close_Button.setAction(buttonCallback);
    add(Close_Button);

    Left_Button.setXY(238, 224);
    Left_Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
    Left_Button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_RUDE));
    Left_Button.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Left_Button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Left_Button.setAction(buttonCallback);
    add(Left_Button);

    Right_Button.setXY(589, 224);
    Right_Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
    Right_Button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_SL86));
    Right_Button.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Right_Button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Right_Button.setAction(buttonCallback);
    add(Right_Button);

    Back_Button.setXY(414, 405);
    Back_Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
    Back_Button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_4NF9));
    Back_Button.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Back_Button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Back_Button.setAction(buttonCallback);
    add(Back_Button);

    Up_Button.setXY(678, 60);
    Up_Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
    Up_Button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_FTS0));
    Up_Button.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Up_Button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Up_Button.setAction(buttonCallback);
    add(Up_Button);

    Down_Button.setXY(678, 405);
    Down_Button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_TINY_FILL_PRESSED_ID));
    Down_Button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_DTED));
    Down_Button.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Down_Button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Down_Button.setAction(buttonCallback);
    add(Down_Button);

    Front_Limit_OFF.setPosition(95, 126, 40, 39);
    Front_Limit_OFF.setCenter(20, 20);
    Front_Limit_OFF.setRadius(10);
    Front_Limit_OFF.setLineWidth(0);
    Front_Limit_OFF.setArc(0, 360);
    Front_Limit_OFFPainter.setColor(touchgfx::Color::getColorFromRGB(87, 87, 87));
    Front_Limit_OFF.setPainter(Front_Limit_OFFPainter);
    add(Front_Limit_OFF);

    Back_Limit_OFF.setPosition(95, 170, 40, 39);
    Back_Limit_OFF.setCenter(20, 20);
    Back_Limit_OFF.setRadius(10);
    Back_Limit_OFF.setLineWidth(0);
    Back_Limit_OFF.setArc(0, 360);
    Back_Limit_OFFPainter.setColor(touchgfx::Color::getColorFromRGB(87, 87, 87));
    Back_Limit_OFF.setPainter(Back_Limit_OFFPainter);
    add(Back_Limit_OFF);

    Right_Limit_OFF.setPosition(95, 211, 40, 39);
    Right_Limit_OFF.setCenter(20, 20);
    Right_Limit_OFF.setRadius(10);
    Right_Limit_OFF.setLineWidth(0);
    Right_Limit_OFF.setArc(0, 360);
    Right_Limit_OFFPainter.setColor(touchgfx::Color::getColorFromRGB(87, 87, 87));
    Right_Limit_OFF.setPainter(Right_Limit_OFFPainter);
    add(Right_Limit_OFF);

    Left_Limit_OFF.setPosition(95, 251, 40, 39);
    Left_Limit_OFF.setCenter(20, 20);
    Left_Limit_OFF.setRadius(10);
    Left_Limit_OFF.setLineWidth(0);
    Left_Limit_OFF.setArc(0, 360);
    Left_Limit_OFFPainter.setColor(touchgfx::Color::getColorFromRGB(87, 87, 87));
    Left_Limit_OFF.setPainter(Left_Limit_OFFPainter);
    add(Left_Limit_OFF);

    Up_Limit_OFF.setPosition(95, 293, 40, 39);
    Up_Limit_OFF.setCenter(20, 20);
    Up_Limit_OFF.setRadius(10);
    Up_Limit_OFF.setLineWidth(0);
    Up_Limit_OFF.setArc(0, 360);
    Up_Limit_OFFPainter.setColor(touchgfx::Color::getColorFromRGB(87, 87, 87));
    Up_Limit_OFF.setPainter(Up_Limit_OFFPainter);
    add(Up_Limit_OFF);

    Down_Limit_OFF.setPosition(95, 336, 40, 39);
    Down_Limit_OFF.setCenter(20, 20);
    Down_Limit_OFF.setRadius(10);
    Down_Limit_OFF.setLineWidth(0);
    Down_Limit_OFF.setArc(0, 360);
    Down_Limit_OFFPainter.setColor(touchgfx::Color::getColorFromRGB(87, 87, 87));
    Down_Limit_OFF.setPainter(Down_Limit_OFFPainter);
    add(Down_Limit_OFF);

    Arm_Limit_OFF.setPosition(95, 377, 40, 39);
    Arm_Limit_OFF.setCenter(20, 20);
    Arm_Limit_OFF.setRadius(10);
    Arm_Limit_OFF.setLineWidth(0);
    Arm_Limit_OFF.setArc(0, 360);
    Arm_Limit_OFFPainter.setColor(touchgfx::Color::getColorFromRGB(87, 87, 87));
    Arm_Limit_OFF.setPainter(Arm_Limit_OFFPainter);
    add(Arm_Limit_OFF);

    Front_Limit_ON.setPosition(95, 126, 40, 39);
    Front_Limit_ON.setCenter(20, 20);
    Front_Limit_ON.setRadius(10);
    Front_Limit_ON.setLineWidth(0);
    Front_Limit_ON.setArc(0, 360);
    Front_Limit_ONPainter.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    Front_Limit_ON.setPainter(Front_Limit_ONPainter);
    Front_Limit_ON.setVisible(false);
    add(Front_Limit_ON);

    Back_Limit_ON.setPosition(95, 170, 40, 39);
    Back_Limit_ON.setCenter(20, 20);
    Back_Limit_ON.setRadius(10);
    Back_Limit_ON.setLineWidth(0);
    Back_Limit_ON.setArc(0, 360);
    Back_Limit_ONPainter.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    Back_Limit_ON.setPainter(Back_Limit_ONPainter);
    Back_Limit_ON.setVisible(false);
    add(Back_Limit_ON);

    Right_Limit_ON.setPosition(95, 211, 40, 39);
    Right_Limit_ON.setCenter(20, 20);
    Right_Limit_ON.setRadius(10);
    Right_Limit_ON.setLineWidth(0);
    Right_Limit_ON.setArc(0, 360);
    Right_Limit_ONPainter.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    Right_Limit_ON.setPainter(Right_Limit_ONPainter);
    Right_Limit_ON.setVisible(false);
    add(Right_Limit_ON);

    Left_Limit_ON.setPosition(95, 251, 40, 39);
    Left_Limit_ON.setCenter(20, 20);
    Left_Limit_ON.setRadius(10);
    Left_Limit_ON.setLineWidth(0);
    Left_Limit_ON.setArc(0, 360);
    Left_Limit_ONPainter.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    Left_Limit_ON.setPainter(Left_Limit_ONPainter);
    Left_Limit_ON.setVisible(false);
    add(Left_Limit_ON);

    Up_Limit_ON.setPosition(95, 293, 40, 39);
    Up_Limit_ON.setCenter(20, 20);
    Up_Limit_ON.setRadius(10);
    Up_Limit_ON.setLineWidth(0);
    Up_Limit_ON.setArc(0, 360);
    Up_Limit_ONPainter.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    Up_Limit_ON.setPainter(Up_Limit_ONPainter);
    Up_Limit_ON.setVisible(false);
    add(Up_Limit_ON);

    Down_Limit_ON.setPosition(95, 336, 40, 39);
    Down_Limit_ON.setCenter(20, 20);
    Down_Limit_ON.setRadius(10);
    Down_Limit_ON.setLineWidth(0);
    Down_Limit_ON.setArc(0, 360);
    Down_Limit_ONPainter.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    Down_Limit_ON.setPainter(Down_Limit_ONPainter);
    Down_Limit_ON.setVisible(false);
    add(Down_Limit_ON);

    Arm_Limit_ON.setPosition(95, 377, 40, 39);
    Arm_Limit_ON.setCenter(20, 20);
    Arm_Limit_ON.setRadius(10);
    Arm_Limit_ON.setLineWidth(0);
    Arm_Limit_ON.setArc(0, 360);
    Arm_Limit_ONPainter.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    Arm_Limit_ON.setPainter(Arm_Limit_ONPainter);
    Arm_Limit_ON.setVisible(false);
    add(Arm_Limit_ON);
}

Screen1ViewBase::~Screen1ViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Screen1ViewBase::setupScreen()
{

}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Front_Button)
    {
        //Func_Front_Button
        //When Front_Button clicked call virtual function
        //Call Func_Front_Button
        Func_Front_Button();
    }
    if (&src == &Open_Button)
    {
        //Func_Open_Button
        //When Open_Button clicked call virtual function
        //Call Func_Open_Button
        Func_Open_Button();
    }
    if (&src == &Close_Button)
    {
        //Func_Close_Button
        //When Close_Button clicked call virtual function
        //Call Func_Close_Button
        Func_Close_Button();
    }
    if (&src == &Left_Button)
    {
        //Func_Left_Button
        //When Left_Button clicked call virtual function
        //Call Func_Left_Button
        Func_Left_Button();
    }
    if (&src == &Right_Button)
    {
        //Func_Right_Button
        //When Right_Button clicked call virtual function
        //Call Func_Right_Button
        Func_Right_Button();
    }
    if (&src == &Back_Button)
    {
        //Func_Back_Button
        //When Back_Button clicked call virtual function
        //Call Func_Back_Button
        Func_Back_Button();
    }
    if (&src == &Up_Button)
    {
        //Func_Up_Button
        //When Up_Button clicked call virtual function
        //Call Func_Up_Button
        Func_Up_Button();
    }
    if (&src == &Down_Button)
    {
        //Func_Down_Button
        //When Down_Button clicked call virtual function
        //Call Func_Down_Button
        Func_Down_Button();
    }
}
